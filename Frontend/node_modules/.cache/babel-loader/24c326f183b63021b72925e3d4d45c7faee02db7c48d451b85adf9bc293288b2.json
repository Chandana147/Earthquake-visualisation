{"ast":null,"code":"var _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport Civic from \"./\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [geoJson, setgeoJson] = useState([]);\n  useEffect(() => {\n    console.log(geoJson);\n  }, [geoJson]);\n  useEffect(() => {\n    receiving();\n  }, []);\n  const receiving = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8080/geoJson`);\n      console.log(response);\n      if (response.data.code === 200) {\n        setgeoJson(response);\n      } else {\n        console.log('not data');\n        // alert('not working')\n      }\n    } catch (err) {\n      console.log(err);\n      // alert('wrong')\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(App, \"+/FsSem9KyD8UCjCvARDF/9HCOs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","Civic","Fragment","_Fragment","jsxDEV","_jsxDEV","App","_s","geoJson","setgeoJson","console","log","receiving","response","get","data","code","err","_c","$RefreshReg$"],"sources":["/Users/chandana/Desktop/civic/Frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport Civic from \"./\"\n\nconst App=()=> {\n  const [geoJson, setgeoJson] = useState([])\n\n  useEffect(()=> {\n    console.log(geoJson);\n  },[geoJson]);\n\n  useEffect(() => {\n    receiving();\n  },[]);\n\n    const receiving = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/geoJson`)\n        console.log(response);\n        if (response.data.code === 200) {\n          setgeoJson(response)\n        }\n        else {\n          console.log('not data');\n          // alert('not working')\n        }\n      }\n      catch (err) {\n        console.log(err)\n        // alert('wrong')\n      }\n    }\n  return (\n    <>\n      {/* {geoJson.map((i)=>{\n        <p>{i.Datetime}</p>\n        return i;\n      })} */}\n    </>\n  );\n}\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,IAAI;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,GAAG,GAACA,CAAA,KAAK;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAK;IACbY,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EACtB,CAAC,EAAC,CAACA,OAAO,CAAC,CAAC;EAEZV,SAAS,CAAC,MAAM;IACdc,SAAS,CAAC,CAAC;EACb,CAAC,EAAC,EAAE,CAAC;EAEH,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,+BAA8B,CAAC;MACjEJ,OAAO,CAACC,GAAG,CAACE,QAAQ,CAAC;MACrB,IAAIA,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;QAC9BP,UAAU,CAACI,QAAQ,CAAC;MACtB,CAAC,MACI;QACHH,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;QACvB;MACF;IACF,CAAC,CACD,OAAOM,GAAG,EAAE;MACVP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;MAChB;IACF;EACF,CAAC;;EACH,oBACEZ,OAAA,CAAAF,SAAA,mBAKE,CAAC;AAEP,CAAC;AAAAI,EAAA,CApCKD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAqCT,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}