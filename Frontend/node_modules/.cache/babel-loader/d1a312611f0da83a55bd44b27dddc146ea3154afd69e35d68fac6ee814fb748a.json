{"ast":null,"code":"var _jsxFileName = \"/Users/chandana/Desktop/civic/Frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [geoJson, setgeoJson] = useState([]);\n  useEffect(() => {\n    receiving();\n    console.log(geoJson);\n  }, [geoJson]);\n  const receiving = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8080/geoJson`);\n      console.log(response);\n      if (response.length > 0) {\n        setgeoJson(response);\n      } else {\n        console.log('not data');\n        // alert('not working')\n      }\n    } catch (err) {\n      console.log(err);\n      alert('wrong');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: geoJson.map(i => {\n      /*#__PURE__*/_jsxDEV(\"p\", {\n        children: i.Datetime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n      return i;\n    })\n  }, void 0, false);\n};\n_s(App, \"KhzVfog5utRo6X44f5WMuaGbK9U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","geoJson","setgeoJson","receiving","console","log","response","get","length","err","alert","children","map","i","Datetime","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chandana/Desktop/civic/Frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\n\nconst App=()=> {\n  const [geoJson, setgeoJson] = useState([])\n\n  useEffect(()=> {\n    receiving();\n    console.log(geoJson);\n  },[geoJson]);\n\n    const receiving = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/geoJson`)\n        console.log(response);\n        if (response.length > 0) {\n          setgeoJson(response)\n        }\n        else {\n          console.log('not data');\n          // alert('not working')\n        }\n      }\n      catch (err) {\n        console.log(err)\n        alert('wrong')\n      }\n    }\n  return (\n    <>\n      {geoJson.map((i)=>{\n        <p>{i.Datetime}</p>\n        return i;\n      })}\n    </>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,GAAG,GAACA,CAAA,KAAK;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAK;IACbW,SAAS,CAAC,CAAC;IACXC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;EACtB,CAAC,EAAC,CAACA,OAAO,CAAC,CAAC;EAEV,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,+BAA8B,CAAC;MACjEH,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;MACrB,IAAIA,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAE;QACvBN,UAAU,CAACI,QAAQ,CAAC;MACtB,CAAC,MACI;QACHF,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;QACvB;MACF;IACF,CAAC,CACD,OAAOI,GAAG,EAAE;MACVL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;MAChBC,KAAK,CAAC,OAAO,CAAC;IAChB;EACF,CAAC;EACH,oBACEd,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACGV,OAAO,CAACW,GAAG,CAAEC,CAAC,IAAG;MAChB,aAAAjB,OAAA;QAAAe,QAAA,EAAIE,CAAC,CAACC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;MACnB,OAAOL,CAAC;IACV,CAAC;EAAC,gBACF,CAAC;AAEP,CAAC;AAAAb,EAAA,CAjCKD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}